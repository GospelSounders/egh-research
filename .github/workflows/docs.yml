name: Documentation

on:
  push:
    branches: [ main, master ]
    paths:
      - 'docs/**'
      - '**/*.md'
      - 'apps/local-server/src/**'
      - 'apps/website/**'
      - '.github/workflows/docs.yml'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-docs:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate documentation data and build website
        run: |
          # Generate comprehensive documentation data from ZIP files and books export
          node scripts/generate-docs-data.js
          
          # Copy JSON data to website public directory for pseudo-API access
          mkdir -p apps/website/public/api
          cp docs/data.json apps/website/public/api/
          cp docs/books.json apps/website/public/api/
          cp docs/zip-structure.json apps/website/public/api/
          cp docs/api-endpoints.json apps/website/public/api/
          
          # Copy books export data for direct access
          cp data/books-export.json apps/website/public/api/books-export.json
          
          # Clean up any problematic API routes that depend on shared packages
          rm -rf apps/website/src/app/api/egw/books/[bookId]
          rm -rf apps/website/src/app/api/test-db
          
          # Clean build cache to avoid stale imports
          cd apps/website
          rm -rf .next out
          
          # Build the Next.js website for static export
          pnpm export
          
          # Copy exported site to root docs directory for GitHub Pages
          cd ../..
          rm -rf docs/*
          cp -r apps/website/out/* docs/
          
          # Ensure JSON files are available at root for direct download
          cp apps/website/public/api/* docs/

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs

  deploy-docs:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-docs
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4