"use strict";(()=>{var e={};e.id=829,e.ids=[829],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},5375:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>l,patchFetch:()=>m,requestAsyncStorage:()=>h,routeModule:()=>u,serverHooks:()=>d,staticGenerationAsyncStorage:()=>c});var a={};r.r(a),r.d(a,{GET:()=>p});var n=r(3985),s=r(8659),o=r(2432),i=r(2937);async function p(){try{let e={status:"healthy",timestamp:new Date().toISOString(),version:process.env.npm_package_version||"1.0.0",environment:"production"};return i.NextResponse.json(e,{status:200})}catch(e){return i.NextResponse.json({status:"unhealthy",error:e instanceof Error?e.message:"Unknown error",timestamp:new Date().toISOString()},{status:500})}}let u=new n.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/health/route",pathname:"/api/health",filename:"route",bundlePath:"app/api/health/route"},resolvedPagePath:"/home/brian/Code/MCPSERVERS/egw-writings-mcp/apps/website/src/app/api/health/route.ts",nextConfigOutput:"standalone",userland:a}),{requestAsyncStorage:h,staticGenerationAsyncStorage:c,serverHooks:d}=u,l="/api/health/route";function m(){return(0,o.patchFetch)({serverHooks:d,staticGenerationAsyncStorage:c})}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[800,144],()=>r(5375));module.exports=a})();